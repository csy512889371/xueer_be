# this is the xueer new added and changed API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Xueer API
  description: 学而新版新增及改动api
  version: "1.0.0"
# the domain of the service
host: xueer.muxixyz.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api/v1.0
produces:
  - application/json
paths:
  /products:
    get:
      summary: Product Types
      description: |
        The Products endpoint returns information about the *Uber* products
        offered at a given location. The response includes the display name
        and other details about each product, and lists the products in the
        proper display order.
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
      tags:
        - Products
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /estimates/price:
    get:
      summary: Price Estimates
      description: |
        The Price Estimates endpoint returns an estimated price range
        for each product offered at a given location. The price estimate is
        provided as a formatted string with the full price range and the localized
        currency symbol.<br><br>The response also includes low and high estimates,
        and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for
        situations requiring currency conversion. When surge is active for a particular
        product, its surge_multiplier will be greater than 1, but the price estimate
        already factors in this multiplier.
      parameters:
        - name: start_latitude
          in: query
          description: Latitude component of start location.
          required: true
          type: number
          format: double
        - name: start_longitude
          in: query
          description: Longitude component of start location.
          required: true
          type: number
          format: double
        - name: end_latitude
          in: query
          description: Latitude component of end location.
          required: true
          type: number
          format: double
        - name: end_longitude
          in: query
          description: Longitude component of end location.
          required: true
          type: number
          format: double
      tags:
        - Estimates
      responses:
        200:
          description: An array of price estimates by product
          schema:
            type: array
            items:
              $ref: '#/definitions/PriceEstimate'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /estimates/time:
    get:
      summary: Time Estimates
      description: The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.
      parameters:
        - name: start_latitude
          in: query
          description: Latitude component of start location.
          required: true
          type: number
          format: double
        - name: start_longitude
          in: query
          description: Longitude component of start location.
          required: true
          type: number
          format: double
        - name: customer_uuid
          in: query
          type: string
          format: uuid
          description: Unique customer identifier to be used for experience customization.
        - name: product_id
          in: query
          type: string
          description: Unique identifier representing a specific product for a given latitude & longitude.
      tags:
        - Estimates
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /history:
    get:
      summary: User Activity
      description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - User
      responses:
        200:
          description: History information for the given user
          schema:
            $ref: '#/definitions/Activities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Role的自增主键.
      name:
        type: string
        description: 角色名，要求在表中唯一.
      default:
        type: bool
        description: 是否是注册用户默认角色，默认为False
      permissions:
        type: integer
        description: 当前角色拥有的权限.
      users:
        type: array
        description: 与User表相关联的虚拟属性，可以拿到属于当前角色的User对象.
        items:
          $ref: '#/definitions/User'
  User:
    type: object
    properties:
      id:
        type: integer
        description: 用户表自增主键
      username:
        type: string
        description: 用户名,唯一，有索引
      email:
        type: string
        description: 邮箱，唯一，索引
      qq:
        type: string
        description: 用户QQ,有索引.
      major:
        type: string
        description: 专业.
      password_hash:
        type: string
        description: 密码的哈希值.
      phone:
        type: string
        description: 电话，默认为None 
      school:
        type: string
        description: 学院，默认为空，有索引
      avatar:
        type: string
        description: 头像URL 
      role_id: 
        type: integer
        description: 指向Role的外键
      confirmed:
        type: bool
        description: 该用户是否通过验证的标志位
      comments:
        type: array
        description: 与Comments表相关联的虚拟属性，可以拿到当前用户发表的评论的Comments对象的查询对象 
        items:
          $ref: '#/definitions/Comments'
      questions:
        type: array
        description: 与CourseQuestion表相关联的虚拟属性，可以拿到当前用户发表课程提问的CourseQuestion对象的查询对象
        items:
          $ref: '#/definitions/CourseQuestion'
      answers:
        type: array
        description: 与Answer表相关联的虚拟属性，可以拿到当前用户发表的回答的Answer对象的查询对象 
        items:
          $ref: '#/definitions/Answer'
  Courses:
    type: object
    properties:
      id:
        type: integer
        description: 主键.
      name:
        type: string
        description: 课程名
      category_id:
        type: integer
        description: 指向CourseCategory的外键, 课程主分类
      subcategory_id:
        type: integer
        description: 指向CoursesSubCategories的外键, 课程二级分类
      type_id:
        type: integer
        description: 指向CourseType的外键, 学分类别.
      credit:
        type: integer
        description: 该课程对应的学分
      available:
        type: bool
        description: 课程是否可用
      loctime:
        type: string
        description: 上课地点和时间
      teacher:
        type: string
        description: 老师姓名
      count:
        type: integer
        description: 课程对应的评论数
      score:
        type: integer
        description: 情感分析得分
      introduction:
        type: string
        description: 课程介绍
      likes:
        type: integer
        description: 课程对应的点赞数,默认为０
      liked:
        type: bool
        description: 属性方法，当前用户是否点赞了这门课
      hot_tags:
        type: string
        description: 返回热门的4个标签，用空格隔开
      comment:
        type: array
        description:  与Comments表相关联的虚拟属性，可以拿到当前课程的Comments对象的查询.
        items:
          $ref: '#/definitions/Comments'  
      tags:
        type: array
        description: 与CourseTag表相关联的虚拟属性，可以拿到当前课程的CourseTag对象的查询.
        items:
          $ref: '#/definitions/CourseTag'
      users:
        type: array
        description: 课程与用户点赞的多对多关系, cascade级联删除
        items:
          $ref: '#/definitions/User'
      questions:
        type: array
        description: 课程与提问的多对多关系, cascade级联删除
        items:
          $ref: '#/definitions/CourseQuestion'
  CourseCategories:
    type: object
    properties:
      id:
        type: integer
        description: 课程主分类主键
      name:
        type: string
        description: 课程主分类的名称
      courses:
        type: array
        description: 与Courses表相关联的虚拟属性，可以拿到当前课程主分类的Courses对象的查询对象
        items:
          $ref: '#/definitions/Courses'
      subcategories:
        type: array
        description: 该主分类下面对应的课程子分类
        items:
          $ref: "#/definitions/CoursesSubCategories"
  CoursesSubCategories:
    type: object
    properties:
      id:
        type: integer
        description: 课程子分类主键
      name:
        type: string
        description: 课程子分类名称
      courses:
        type: array
        description: 该课程子分类下面对应的课程
        items:
          $ref: "#/definitions/Courses"
  CourseTypes:
    type: object
    properties:
      id:
       type: integer
       description: 课程类型主键
      name:
        type: string
        description: 课程类型名称
      courses:
        type: array
        description: 该课程类型下面对应的课程
        items:
          $ref: "#/definitions/Courses"
  
  Comments:
    type: object
    properties:
      id:
        type: integer
        description: 评论主键
      course_id:
        type: integer
        description: 指向Courses.id的外键,与课程的多对一关系
      user_id:
        type: integer
        description: 指向User.id的外键，与用户的多对一关系
      timestamp:
        type: datetime
        description: 时间戳, 默认是系统时间(datetime.utcnow)
      body:
        type: string
        description: 评论内容
      likes:
        types: integer
        description: 评论获得的点赞数，默认为０
      is_userful:
        type: integer
        description: ??????
      tip_id:
        type: integer
        description: 指向tip的外键, 与tip的多对一关系
      time:
        type: string
        description: 属性方法，将timestamp转成字符串表示的时间
      liked:
        type: bool
        description: 当前用户是否给当前评论点赞，匿名用户默认为false,即未点赞
      user:
        type: array
        deascription: 与用户点赞的多对多关系
        items:
          $ref: "#/definitions/User"
  Teacher:
  type: object
  description: 老师类，目前未使用该类
  properties:
    id:
      type: integer
      description: 主键
    name:
      type: string
      description: 老师姓名
    department:
      type: string
      description: 所在院系
    introduction:
      type: string
      description: 老师简介
    phone:
      type: string
      description: 老师联系方式
    weibo:
      type: string
      description: 老师微博主页地址
  Tags:
    type: object
    properties:
      id:
        type: integer
        description: 主键
      name:
        type: string
        description: Tag名称
      count:
        type: integer
        description: 标签计数, 用于全站热门标签统计,默认为０
      courses:
        type: array
        deascription: 标签和课程的多对多关系
        items:
          $ref: "#/definitions/CourseTag"
  Tips:
    type: object
    properties:
      id:
        type: integer
        description: 运营文章表主键
      title:
        type: string
        description: 运营文章标题
      body:
        type: string
        description: 文章主题(含HTML)
      img_url:
        type: string
        description: 文章对应的图片
      banner_url:
        type: string
        description: 桌面版banner
      author:
        type: string
        description: 作者名称
      timestamp: 
        type: datatime
        description: 时间戳, 默认是系统时间
      likes:
        type: integer
        description: 文章对应的点赞数
      views:
        type: integer
        description: 文章的浏览量
      time:
        type: string
        description: 将上面的timestamp格式化为字符串
      liked:
        type: bool
        description: 当前用户是否给该文章点赞，匿名用户为false,即未点赞
      users:
        type: array
        description: 文章和用户点赞的多对多关系
        items:
          $ref: "#/definitions/User"
  CourseQuestion:
    type: object
    properties:
      id:
        type: integer
        description: 主键
      question_content:
        type : string
        description: 问题的内容
      create_time:
        type: datatime
        description: 提问时间
      author_id:
        type: integer
        description: 指向User.id的外键
      course_id:
        type: integer
        description: 指向Course.id的外键
      answers:
        type: array
        description: 该提问对应的回答的Answer对象
        items:
          $ref: "#/definitions/Answer"
  Answer:
    type: object
    properties:
      id:
        type: integer
        description: 主键
      answer_content:
        type : string
        description: 回答的内容
      create_time:
        type: datatime
        description: 回答时间
      author_id:
        type: integer
        description: 指向User.id的外键
      question_id:
        type: integer
        description: 指向CourseQuestion.id的外键
      
            


